name: Publish the artifact to Exchange
on:
  workflow_call:
    inputs:
      GITHUB_ENVIRONMENT:
        required: true
        type: string
    secrets:
      EX_CONNECTED_APP_ID:
        required: true
      EX_CONNECTED_APP_SECRET:
        required: true
      CH_CONNECTED_APP_ID:
        required: true
      CH_CONNECTED_APP_SECRET:
        required: true
      SECURE_ENCRYPT_KEY:
        required: true
      MULE_NEXUS_REPO_EE_USERNAME:
        required: true
      MULE_NEXUS_REPO_EE_PWD:
        required: true
      MULE_PAT:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
        
    environment:
      name: ${{ inputs.GITHUB_ENVIRONMENT }}
    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJSON(github) }}
      run: echo "$GITHUB_CONTEXT"
      
    - name: Get REPO_NAME
      run: |
        REPO_NAME=${GITHUB_REPOSITORY#*/}
        STRIPPED_REPO_NAME=${REPO_NAME#*-}
        echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV #exported so it can be used in workflow
        echo "STRIPPED_REPO_NAME=$STRIPPED_REPO_NAME" >> $GITHUB_ENV

    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event.ref}}

    - name : checkout deploy scripts
      uses: actions/checkout@v3
      with:
        repository: am-cicd/ms-deploy-scripts
        path: deployment-scripts
        ref: main
        token: ${{ secrets.MULE_PAT }}
        
    - name : list deploy scripts
      run: |
        ls /home/runner/work/test-mule-app/test-mule-app/deployment-scripts
     
          
    - name : checkout config
      uses: actions/checkout@v3
      with:
        repository: am-cicd/ms-env-config
        path: environment-config
        ref: main
        token: ${{ secrets.MULE_PAT }}
          
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'
        cache: 'maven'
        # restore-keys: |  ${{ runner.os }}-maven-

    - name: Setup Maven Action
      uses: s4u/setup-maven-action@v1.2.1
      with:
        java-version: '17'
        maven-version: '3.9.6'
        
    - name: Create Custom settings xml
      uses: whelk-io/maven-settings-xml-action@v20
      with:
        repositories: >
          [
            {
              "id": "MuleRepositoryEE",
              "name": "MuleRepositoryEE",
              "url": "https://repository.mulesoft.org/nexus-ee/content/repositories/releases-ee/",
              "releases": {
                "enabled": "true"
              },
              "snapshots": {
                "enabled": "true"
              }
            }
          ]
        servers: >
          [
            {
               "id"       : "MuleRepositoryEE",
               "username" : "${{ secrets.MULE_NEXUS_REPO_EE_USERNAME }}",
               "password" : "${{ secrets.MULE_NEXUS_REPO_EE_PWD }}"
            },
            {
               "id"       : "cloudhubConnectedApp",
               "username" : "~~~Client~~~",
               "password" : "${{ secrets.CH_CONNECTED_APP_ID }}~?~${{ secrets.CH_CONNECTED_APP_SECRET }}"
            },
            {
               "id"       : "anypoint-exchange-v3",
               "username" : "~~~Client~~~",
               "password" : "${{ secrets.EX_CONNECTED_APP_ID }}~?~${{ secrets.EX_CONNECTED_APP_SECRET }}"
            }
          ]
        output_file: .m2/settings.xml

    - name: Checking Cache
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Maven Version
      run: mvn -version
      
    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'
          
    - run: pip install pyyaml requests boto3 ruamel_yaml

    - name: Dump GitHub workspace
      env:
        GIT_WORKSPACE1: ${{ toJSON(github.workspace) }}
      run: echo "$GIT_WORKSPACE1"
      
    - name: listing
      env:
        GIT_WORKSPACE1: ${{ toJSON(github.workspace) }}
      run: |
        ls /home/runner/work/test-mule-app/test-mule-app/deployment-scripts
        
           
    - name: Run script
      run: |
         python ${{ github.workspace }}/deployment-scripts/properties-injection.py \
           -e /home/runner/work/${{ env.REPO_NAME }}/${{ env.REPO_NAME }}/environment-config/${{ inputs.GITHUB_ENVIRONMENT }}/environment-properties.yaml \
           -j /home/runner/work/${{ env.REPO_NAME }}/${{ env.REPO_NAME }}/target/${{ env.ARTIFACT_ID }}-${{ env.VERSION }}-mule-application.jar
    
    - name: Build, Test and Publish artifact to Exchange - Develop Branch
      if: ${{ github.event.ref == 'refs/heads/develop' }}
      run: mvn clean deploy -B -s .m2/settings.xml -Denv=${{ vars.APPLICATION_ENV }} -Dsecure.key.imb=${{ secrets.SECURE_ENCRYPT_KEY }}

    - name: Build, Test and Publish artifact to Exchange - Release Branch
      if: ${{ contains(github.event.ref,'refs/heads/releases') }}
      run: mvn clean deploy -B -s .m2/settings.xml -Denv=${{ vars.APPLICATION_ENV }} -Dsecure.key.imb=${{ secrets.SECURE_ENCRYPT_KEY }}

    - name: Stamp artifact file name with commit hash
      run: |
        artifactName1=$(ls target/*.jar | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
        mv $artifactName1 $artifactName2

    - name: Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: artifacts
        path: target/*.jar
        retention-days: ${{ vars.MULE_ARTIFACT_RETENTION_PERIOD }} #No of days the artifact resides in the repository

    - name: Publish MUnit Coverage Reports
      if: ${{ github.event.ref == 'refs/heads/develop' }}
      uses: actions/upload-artifact@master
      with:
        name: munit-coverage-reports
        path: target/site/munit/coverage/*
